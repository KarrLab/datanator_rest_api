version: 2
workflows:
  API-Workflow:
    jobs:
      - karrlab
      - setup
      - test:
          requires:
            - setup
  version: 2

jobs:
  karrlab:
    working_directory: /root/project
    docker:
      - image: karrlab/wc_env_dependencies:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-{{ arch }}-{{ .Branch }}-{{ checksum "/etc/docker-image-tag" }}-{{ checksum
              "requirements.txt" }}
      - run:
          name: Install pkg_utils (Python 3)
          command: pip3 install -U git+https://github.com/KarrLab/pkg_utils.git#egg=pkg_utils
      - run:
          name: Install karr_lab_build_utils (Python 3)
          command: |
            pip3 install -U git+https://github.com/KarrLab/sphinxcontrib-googleanalytics.git#egg=sphinxcontrib_googleanalytics
            pip3 install -U git+https://github.com/KarrLab/wc_utils.git#egg=wc_utils[all]
            pip3 install -U git+https://github.com/KarrLab/karr_lab_build_utils.git#egg=karr_lab_build_utils[all]
      - run:
          name: Install package configuration files including credentials
          command: karr_lab_build_utils3 download-install-package-config-files
      - run:
          name: Setup Python environment
          command: |
            if [[ -f .circleci/requirements.txt ]]; then
              while IFS="" read -r line || [ -n "$line" ]; do
                if [[ ! -z "$line" ]] && [[ ! "$line" =~ ^# ]]; then
                  pip3 install -U "$line"
                fi
              done < .circleci/requirements.txt
            fi
      - run:
          name: Install package (Python 3)
          command: pip3 install -U -e .[all]
      - save_cache:
          key:
            v1-{{ arch }}-{{ .Branch }}-{{ checksum "/etc/docker-image-tag" }}-{{
            checksum "requirements.txt" }}
          paths:
            - /usr/local/lib/python3.6/site-packages
      - run:
          name: Test code
          command: |
            set +e

            karr_lab_build_utils3 run-tests --with-xunit --with-coverage
            TEST_EXIT_CODE_PY3=$?

            # Calculate exit code and save to file for reading by the next step
            if [[ $TEST_EXIT_CODE_PY3 -eq 0 ]]; then
              echo "0" > TEST_EXIT_CODE
              exit 0
            else
              echo "0" > TEST_EXIT_CODE
              exit 1
            fi
      - run:
          name: Generate reports, archive results, and send notifications
          when: always
          command: |
            if [[ -f TEST_EXIT_CODE ]]; then
              INSTALLATION_EXIT_CODE=0
              TEST_EXIT_CODE=$(<TEST_EXIT_CODE)
            else
              INSTALLATION_EXIT_CODE=1
              TEST_EXIT_CODE=1
            fi

            karr_lab_build_utils3 do-post-test-tasks $INSTALLATION_EXIT_CODE $TEST_EXIT_CODE
      - store_test_results:
          path: /root/project/tests/reports
      - store_artifacts:
          path: /root/project/tests/reports
          destination: reports
      - store_artifacts:
          path: /root/.wc/log
          destination: log
      - store_artifacts:
          path: /root/project/docs/_build/html
          destination: docs
  setup:
    working_directory: /root/build
    docker:
      - image: python:3.6
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{.Branch}}-
      - checkout
      - restore_cache:
          key:
            dependencies-v1-{{ arch }}-{{ .Branch }}-{{ checksum "requirements.txt"
            }}
      - run:
          name: Install test dependencies
          command:
            "if [[ -f tests/requirements.txt ]]; then              \n      pip3\
            \ install -r tests/requirements.txt\nfi\n"
      - run:
          name: Install Package Dependencies
          command: pip3 install -r requirements.txt
      - save_cache:
          key:
            dependencies-v1-{{ arch }}-{{ .Branch }}-{{ checksum "requirements.txt"
            }}
          paths:
            - /usr/local/lib/python3.6/site-packages
            - /user/local/bin
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
  test:
    working_directory: /root/build
    docker:
      - image: python:3.6
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key:
            dependencies-v1-{{ arch }}-{{ .Branch }}-{{ checksum "requirements.txt"
            }}
      - run:
          name: Install package (Python 3)
          command: pip3 install -U -e .
      - run:
          name: Run Tests
          command: pytest
