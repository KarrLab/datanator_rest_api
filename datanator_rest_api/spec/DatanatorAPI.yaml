openapi: 3.0.1
info:
  contact:
    email: info@karrlab.org
    name: Karr Lab
    url: https://datanator.info/
  description: An API for interacting with the Datanator Integrated Database. The
    API can be used to get values for a variety of biological molecules and reactions,
    such as concentration, abundance, or kinetic parameters. The API complies with
    the openAPI 3 standard. Use the <a href="/apiDoc"> /apiDoc</a> path to access
    the api specification
  title: Datanator API
  version: 1.0.0
servers:
- description: The default server
  url: /
- description: The Datanator server
  url: http://api.datanator.info
- description: The Datanator test server
  url: http://testapi.datanator.info
tags:
- description: Requests related to the database itself
  name: Datanator
- description: Requests for information about metabolites, including conentrations
  name: Metabolites
- description: Requests for information about proteins, enzymes, and protein complexes
  name: Proteins
- description: Requests for information on reactions, including kinetic paramters
  name: Reactions
- description: Requests for information on RNA abundance
  name: RNA
paths:
  /:
    get:
      responses:
        '418':
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                required:
                - message
                type: object
          description: I'm a teapot
      summary: Pings the server to verfy connection
  /datanator/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                required:
                - message
                type: object
          description: OK
      summary: Pings the server to verfy connection
      tags:
      - Datanator
  /metabolites/:
    get:
      parameters:
      - in: query
        name: inchi
        required: true
        schema:
          items:
            type: string
          type: array
        style: spaceDelimited
      - in: query
        name: species
        required: true
        schema:
          enum:
          - Escherichia coli
          - Saccharomyces cerevisiae
          type: string
      - description: must be 12 bytes str or 24 hex digits
        examples:
          12-byte:
            summary: a 12-byte str
            value: foo-bar-quux
          24-hex:
            summary: a 24-hex digit
            value: 0123456789ab0123456789ab
        in: query
        name: last_id
        required: false
        schema:
          type: string
      - in: query
        name: page_size
        required: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metabolite'
          description: OK
      summary: Get the list of metabolite objects
      tags:
      - Metabolites
    post:
      description: Update an existing metabolite
      parameters:
      - in: query
        name: inchi_key
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
      summary: Update an existing metabolite
      tags:
      - Metabolites
    put:
      description: Add a new metabolite
      responses:
        '200':
          content:
            text/plain:
              schema:
                example: test
                type: string
          description: OK
      summary: Add a new metabolite
      tags:
      - Metabolites
  /metabolites/concentration/:
    get:
      description: Some description
      parameters:
      - in: query
        name: abstract
        required: false
        schema:
          type: boolean
      - in: query
        name: species
        required: false
        schema:
          type: string
      - in: query
        name: metabolite
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaboliteConcentration'
          description: OK
      summary: Get metabolite concentration based on species and metabolite name
      tags:
      - Metabolites
      - Concentration
  /metabolites/concentrations/:
    get:
      description: |-
        Get concentration data for metabolites. The inchikeys parameter takes a list of inchikeys
         for which to get data. The consensus flag will return a consensus value instead of an array of observations.
         The species query will provide taxonomic distance information for each result.
      parameters:
      - description: inchi string of a metabolite
        in: query
        name: inchi
        required: true
        schema:
          type: string
      - description: display consensus concentration value
        in: query
        name: consensus
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metabolite'
          description: OK
      summary: Get concentrations of Metabolites
      tags:
      - Metabolites
  /proteins/meta/meta_combo/:
    get:
      description: |-
        Get meta information for proteins,
         uniprot_id overrides all other input options.
         Combination of protein_name + taxon_id yields
         all uniprot_id that has abundance information in
         that particular organism. species_name overrides
         ncbi_taxon_id. Users should try different combinations
         to get a feel of what each combination returns.
      parameters:
      - in: query
        name: uniprot_id
        required: false
        schema:
          items:
            type: string
          type: array
      - in: query
        name: ncbi_taxon_id
        required: false
        schema:
          type: integer
      - in: query
        name: species_name
        required: false
        schema:
          type: string
      - in: query
        name: name
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProteinMetaCombo'
          description: OK
      summary: Get meta information for proteins
      tags:
      - Proteins
  /proteins/meta/meta_single/:
    get:
      description: |-
        Get meta information for proteins,
         input only the taxon_id or name (either kegg orthology
         name or protein name).
      parameters:
      - in: query
        name: ncbi_taxon_id
        required: false
        schema:
          type: integer
      - in: query
        name: name
        required: false
        schema:
          type: string
      - in: query
        name: ko
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProteinMetaSingle'
          description: OK
      summary: Get meta information for proteins with one input
      tags:
      - Proteins
  /proteins/precise_abundance/:
    get:
      description: |-
        If abundance value for the protein is not found, one can search for proximity proteins
         using proximity_abundance
      parameters:
      - in: query
        name: uniprot_id
        required: false
        schema:
          items:
            type: string
          type: array
      - in: query
        name: kegg_orthology
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProteinAbundance'
          description: OK
      summary: Get abundance values for proteins
      tags:
      - Proteins
  /proteins/proximity_abundance/:
    get:
      description: Search for analog proteins by traversing the taxonomic tree
      parameters:
      - in: query
        name: uniprot_id
        required: true
        schema:
          type: string
      - in: query
        name: distance
        required: true
        schema:
          type: integer
      - in: query
        name: depth
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProximityProteinAbundance'
          description: OK
      summary: Get abundance values for proteins along the taxonomic tree
      tags:
      - Proteins
  /reactions/kinlawid_by_rxn/:
    get:
      description: Search for reactions given reactants
      parameters:
      - in: query
        name: substrates
        required: true
        schema:
          items:
            type: string
          type: array
      - in: query
        name: products
        required: true
        schema:
          items:
            type: string
          type: array
      - in: query
        name: dof
        required: false
        schema:
          type: integer
      - in: query
        name: projection
        required: false
        schema:
          properties:
            id:
              type: integer
            kinlaw_id:
              type: integer
          type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/RxnCompartment'
                - $ref: '#/components/schemas/RxnEnzyme'
                - $ref: '#/components/schemas/RxnResource'
          description: OK
      summary: Get reactions based on substrates' and products' inchikey
      tags:
      - Reactions
components:
  parameters:
    limitParam:
      description: max records to return
      in: query
      name: limit
      required: true
      schema:
        format: int32
        type: integer
    skipParam:
      description: number of items to skip
      in: query
      name: skip
      required: true
      schema:
        format: int32
        type: integer
  responses:
    GeneralError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
      description: General Error
    IllegalInput:
      description: Illegal input for operation.
    NotFound:
      description: Entity not found.
  schemas:
    Category:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    GeneralError:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      type: object
    Metabolite:
      items:
        properties:
          description:
            type: string
          inchikey:
            type: string
          name:
            type: string
        required:
        - inchikey
        - name
        - description
        type: object
      type: array
    MetaboliteConcentration:
      items:
        properties:
          creation_date:
            type: string
          inchi:
            type: string
          inchikey:
            type: string
          name:
            type: string
          version:
            type: string
        required:
        - version
        - creation_date
        - name
        - inchi
        - inchikey
        type: object
      type: array
    Observation:
      properties:
        error:
          description: A numerical value corresponding to the error in the measurment,
            in the same units as the measurment
          example: '1'
          type: number
        experimental_conditions:
          items:
            type: string
          type: array
        measurment:
          description: A numerical value corresponding to the observed value of the
            measurment
          example: 3.8
          type: number
        measurment_type:
          description: The type of measurment being made
          enum:
          - concentration
          - abundance
          - mass
          type: string
        source:
          example: doi:10.1038/nphys1170
          type: string
        species:
          example: Homo sapiens
          type: string
        units:
          description: The units that the measurment was made in
          example: uMolar
          type: string
      required:
      - measurment_type
      - measurment
      - units
      - species
      - source
      type: object
    ProteinAbundance:
      items:
        properties:
          abundances:
            items:
              properties:
                abundance:
                  type: string
                organ:
                  type: string
              type: object
            type: array
          uniprot_id:
            type: string
        required:
        - uniprot_id
        - abundances
        type: object
      type: array
    ProteinMetaCombo:
      items:
        properties:
          abundances:
            items:
              properties:
                abundance:
                  type: string
                organ:
                  type: string
              type: object
            type: array
          canonical_sequence:
            type: string
          entry_name:
            type: string
          length:
            type: integer
          mass:
            type: string
          ncbi_taxonomy_id:
            type: integer
          protein_name:
            type: string
          species_name:
            type: string
          uniprot_id:
            type: string
        required:
        - uniprot_id
        - entry_name
        - protein_name
        - canonical_sequence
        - length
        - mass
        - abundances
        - ncbi_taxonomy_id
        - species_name
        type: object
      type: array
    ProteinMetaSingle:
      items:
        properties:
          ko_name:
            items:
              type: string
            type: array
          ko_number:
            type: string
          uniprot_ids:
            items:
              type: object
            type: object
        required:
        - uniprot_ids
        - ko_name
        - ko_number
        type: object
      type: array
    ProximityProteinAbundance:
      items:
        properties:
          distance:
            description: -1 indicates no protein with such uniprot_id; -2 indicates
              protein has no ko info.
            type: integer
          documents:
            items:
              properties:
                abundances:
                  items:
                    properties:
                      abundance:
                        type: string
                      organ:
                        type: string
                    type: object
                  type: array
                depth:
                  type: integer
                ko_name:
                  items:
                    type: string
                  type: array
                ko_number:
                  type: string
                ncbi_taxonomy_id:
                  type: integer
                species_name:
                  type: string
                uniprot_id:
                  type: string
              type: object
            type: array
        required:
        - distance
        - documents
        type: object
      type: array
    Reaction:
      properties:
        id:
          type: string
      required:
      - id
      type: object
    RxnCompartment:
      properties:
        enzyme:
          items:
            properties:
              compartment_id:
                type: number
              compartment_name:
                type: string
              created:
                type: string
              modified:
                type: string
            type: object
          type: array
      type: object
    RxnEnzyme:
      properties:
        enzyme:
          items:
            properties:
              enzyme_id:
                type: number
              enzyme_name:
                type: string
              enzyme_type:
                type: string
              molecular_weight:
                type: number
            type: object
          type: array
      type: object
    RxnResource:
      items:
        properties:
          id:
            type: string
          namespace:
            type: string
        type: object
      type: array
    Tag:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
  securitySchemes:
    api_key:
      in: header
      name: api_key
      type: apiKey
    petstore_auth:
      flows:
        implicit:
          authorizationUrl: http://example.org/api/oauth/dialog
          scopes:
            read:pets: read your pets
            write:pets: modify pets in your account
      type: oauth2
