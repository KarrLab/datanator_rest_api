openapi: 3.0.1
info:
  contact:
    email: info@karrlab.org
    name: Karr Lab
    url: https://datanator.info/
  description: A REST API for the <a href="https://datanator.info" target="_blank"
    rel="noopener noreferrer">Datanator integrated database</a> of molecular data
    for modeling the biochemistry of cells. The API can be used to find data for modeling
    cells such as the concentrations of metabolites, abundances of proteins, and rate
    constants of reactions. The API is compliant with the <a href="https://www.openapis.org/"
    target="_blank" rel="noopener noreferrer">OpenAPI 3 standard</a>.
  title: Datanator API
  version: 1.0.0
servers:
- description: The default server
  url: /
- description: The Datanator server
  url: https://api.datanator.info
- description: The Datanator test server
  url: https://testapi.datanator.info
tags:
- description: Requests related to the database itself
  name: Datanator
- description: Requests for information about metabolites, including conentrations
  name: Metabolites
- description: Requests for information about proteins, enzymes, and protein complexes
  name: Proteins
- description: Requests for information on reactions, including kinetic paramters
  name: Reactions
- description: Requests for information on RNA
  name: RNA
- description: Requests for information on KEGG database.
  name: Kegg
- description: Requests for querying the taxonomic tree.
  name: NCBI Taxonomy
paths:
  /:
    get:
      responses:
        '418':
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                required:
                - message
                type: object
          description: I'm a teapot
      summary: Pings the server to verfy connection
  /ftx/text_search/:
    get:
      description: Search for string in Elasticsearch indices
      parameters:
      - in: query
        name: query_message
        required: true
        schema:
          type: string
      - description: ES indices on which ftx will be performed
        in: query
        name: index
        required: true
        schema:
          default: ecmdb,ymdb,metabolites_meta,protein,sabio_rk
          type: string
      - in: query
        name: from_
        required: true
        schema:
          default: 0
          type: integer
      - in: query
        name: size
        required: true
        schema:
          default: 10
          type: integer
      - description: Fields in which the text search will be done.
        in: query
        name: fields
        required: true
        schema:
          default:
          - protein_name
          - synonyms
          - enzymes
          - ko_name
          - gene_name
          - name
          - reaction_participant.substrate.substrate_name
          - reaction_participant.substrate.substrate_synonym
          - reaction_participant.product.product_name
          - reaction_participant.product.substrate_synonym
          - enzymes.enzyme.enzyme_name
          - enzymes.subunit.canonical_sequence
          - species
          items:
            type: string
          type: array
      - in: query
        name: _source_includes
        required: false
        schema:
          items:
            nullable: true
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FTX'
          description: OK
      summary: Full text search on landing page
      tags:
      - FTX
  /ftx/text_search/frontend_num_of_index/:
    get:
      description: Search for number hits in a particular index.
      parameters:
      - in: query
        name: query_message
        required: true
        schema:
          type: string
      - description: comma separated string of indices
        in: query
        name: indices
        required: true
        schema:
          default: ecmdb,ymdb,metabolites_meta,protein,sabio_reaction_entries
          type: string
      - description: number of hits needed (max 70)
        in: query
        name: size
        required: true
        schema:
          default: 10
          maximum: 70
          type: integer
      - in: query
        name: from_
        required: false
        schema:
          default: 0
          type: integer
      - description: Fields in which the text search will be done
        in: query
        name: fields
        required: true
        schema:
          default:
          - protein_name
          - synonyms
          - enzymes
          - ko_name
          - gene_name
          - name
          - enzyme_name
          - product_names
          - substrate_names
          - enzymes.subunit.canonical_sequence
          - species
          - protein_names
          items:
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtxHitsInPage'
          description: OK
      summary: Search for number hits in a particular index
      tags:
      - FTX
  /ftx/text_search/gene_ranked_by_ko/:
    get:
      description: Search for number hits proteins ranked by unique kegg orthology
        name.
      parameters:
      - in: query
        name: query_message
        required: true
        schema:
          type: string
      - in: query
        name: from_
        required: true
        schema:
          default: 0
          type: integer
      - description: number of hits needed (max 70)
        in: query
        name: size
        required: true
        schema:
          default: 10
          maximum: 70
          type: integer
      - description: Fields in which the text search will be done
        in: query
        name: fields
        required: false
        schema:
          default:
          - protein_name
          - synonyms
          - enzymes
          - ko_name
          - gene_name
          - name
          - enzymes.enzyme.enzyme_name
          - enzymes.subunit.canonical_sequence
          - species
          items:
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtxProteinByKo'
          description: OK
      summary: Search for number hits proteins ranked by unique kegg orthology name.
      tags:
      - FTX
  /ftx/text_search/indices_in_page/:
    get:
      description: Search for index of interest (iof) in the returned ftx search page.
      parameters:
      - in: query
        name: query_message
        required: true
        schema:
          type: string
      - description: ES indices on which ftx will be performed
        in: query
        name: index
        required: true
        schema:
          default: ecmdb,ymdb,metabolites_meta,protein,sabio_rk
          type: string
      - description: indices of interest in page
        in: query
        name: iof
        required: true
        schema:
          items:
            type: string
          type: array
      - in: query
        name: from_
        required: true
        schema:
          default: 0
          type: integer
      - in: query
        name: size
        required: true
        schema:
          default: 10
          type: integer
      - description: Fields in which the text search will be done
        in: query
        name: fields
        required: true
        schema:
          default:
          - protein_name
          - synonyms
          - enzymes
          - ko_name
          - gene_name
          - name
          - reaction_participant.substrate.substrate_name
          - reaction_participant.substrate.substrate_synonym
          - reaction_participant.product.product_name
          - reaction_participant.product.substrate_synonym
          - enzymes.enzyme.enzyme_name
          - enzymes.subunit.canonical_sequence
          - species
          items:
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtxHitsInPage'
          description: OK
      summary: Search for index of interest (iof) in the returned ftx search page
      tags:
      - FTX
  /ftx/text_search/num_of_index/:
    get:
      description: Search for number hits in a particular index.
      parameters:
      - in: query
        name: query_message
        required: true
        schema:
          type: string
      - description: index of interest
        in: query
        name: index
        required: true
        schema:
          enum:
          - ecmdb
          - ymdb
          - metabolites_meta
          - sabio_rk
          - protein
          - sabio
          - sabio_reaction_entries
          - rna_halflife
          - taxon_tree
          - brenda_reactions
          - metabolite_concentrations
          - rna_modification
          type: string
      - in: query
        name: from_
        required: true
        schema:
          default: 0
          type: integer
      - description: number of hits needed (max 70)
        in: query
        name: size
        required: true
        schema:
          default: 10
          maximum: 70
          type: integer
      - description: Fields in which the text search will be done
        in: query
        name: fields
        required: true
        schema:
          default:
          - protein_name
          - synonyms
          - enzymes
          - ko_name
          - gene_name
          - name
          - reaction_participant.substrate.substrate_name
          - reaction_participant.substrate.substrate_synonym
          - reaction_participant.product.product_name
          - reaction_participant.product.substrate_synonym
          - enzymes.enzyme.enzyme_name
          - enzymes.subunit.canonical_sequence
          - species
          - protein_names
          - halflives.accession_id
          - identifier
          items:
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtxHitsInPage'
          description: OK
      summary: Search for number hits in a particular index
      tags:
      - FTX
  /kegg/get_meta/:
    get:
      description: A list of kegg ortholog IDs for querying.
      parameters:
      - in: query
        name: kegg_ids
        required: true
        schema:
          items:
            example: K00016
            type: string
          type: array
      - in: query
        name: _from
        schema:
          default: 0
          type: integer
      - in: query
        name: size
        schema:
          default: 10
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeggMetaDoc'
          description: OK
      summary: Get KEGG ortholog meta information for a list of KEGG IDs.
      tags:
      - KEGG
  /metabolites/:
    get:
      parameters:
      - in: query
        name: inchi
        required: true
        schema:
          items:
            type: string
          type: array
        style: spaceDelimited
      - in: query
        name: species
        required: true
        schema:
          enum:
          - Escherichia coli
          - Saccharomyces cerevisiae
          type: string
      - description: must be 12 bytes str or 24 hex digits
        examples:
          12-byte:
            summary: a 12-byte str
            value: foo-bar-quux
          24-hex:
            summary: a 24-hex digit
            value: 0123456789ab0123456789ab
        in: query
        name: last_id
        required: false
        schema:
          type: string
      - in: query
        name: page_size
        required: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metabolite'
          description: OK
      summary: Get the list of metabolite objects
      tags:
      - Metabolites
    post:
      description: Update an existing metabolite
      parameters:
      - in: query
        name: inchi_key
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
      summary: Update an existing metabolite
      tags:
      - Metabolites
    put:
      description: Add a new metabolite
      responses:
        '200':
          content:
            text/plain:
              schema:
                example: test
                type: string
          description: OK
      summary: Add a new metabolite
      tags:
      - Metabolites
  /metabolites/concentration/:
    get:
      description: Some description
      parameters:
      - in: query
        name: abstract
        required: false
        schema:
          type: boolean
      - in: query
        name: species
        required: false
        schema:
          default: Escherichia coli
          type: string
      - in: query
        name: metabolite
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaboliteConcentration'
          description: OK
      summary: Get metabolite concentration based on species and metabolite name
      tags:
      - Metabolites
      - Concentration
  /metabolites/concentration_only/:
    get:
      description: see summary
      parameters:
      - in: query
        name: inchi_key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Get metabolite concentration information from xmdb collection
      tags:
      - Metabolites
  /metabolites/concentrations/:
    get:
      description: |-
        Get concentration data for metabolites. The inchikeys parameter takes a list of inchikeys
         for which to get data. The consensus flag will return a consensus value instead of an array of observations.
         The species query will provide taxonomic distance information for each result.
      parameters:
      - description: InChIKey string of a metabolite
        in: query
        name: inchikey
        required: true
        schema:
          type: string
      - description: Target species
        in: query
        name: species
        schema:
          example: Escherichia coli
          type: string
      - description: Whether to include taxon distance information in concentration
          list.
        in: query
        name: taxon_distance
        schema:
          example: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metabolite'
          description: OK
      summary: Get concentrations of Metabolites
      tags:
      - Metabolites
  /metabolites/concentrations/similar_compounds/:
    get:
      description: Get metabolite's chemically-similar metabolites' concentrations.
      parameters:
      - description: InChIKey string of a metabolite
        in: query
        name: inchikey
        required: true
        schema:
          type: string
      - description: Tanimoto similarity score threshold
        in: query
        name: threshold
        schema:
          example: 0.6
          minimum: 0.6
          type: number
      - description: target species given by the user.
        in: query
        name: target_species
        schema:
          example: homo sapiens
          type: string
      - description: whether to include taxonomic distance information in concentration
          object.
        in: query
        name: taxon_distance
        schema:
          example: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarMetaboliteConcentration'
          description: OK
      summary: Get concentrations of Metabolites.
      tags:
      - Metabolites
  /metabolites/meta/:
    get:
      description: see summary
      parameters:
      - in: query
        name: inchikey
        required: true
        schema:
          type: string
      - in: query
        name: projection
        schema:
          example:
            _id: 0
            kegg_meta.gene_ortholog: 0
            reaction_participants: 0
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
      summary: Get metabolite meta information from metabolites_meta collection
      tags:
      - Metabolites
  /metabolites/summary/concentration_count/:
    get:
      description: Some description
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of metabolites that have concenctration values
      tags:
      - Metabolites
      - Concentration
  /metabolites/summary/curated_ref_count/:
    get:
      description: Some description
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of munaully curated articles used to generate concentration
        values.
      tags:
      - Metabolites
      - Concentration
  /metabolites/summary/ecmdb_conc_count/:
    get:
      description: Some description
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of concentrations observations in ECMDB
      tags:
      - Metabolites
      - Concentration
  /metabolites/summary/ecmdb_doc_count/:
    get:
      description: Some description
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of metabolites in ECMDB collection.
      tags:
      - Metabolites
      - Concentration
  /metabolites/summary/ecmdb_ref_count/:
    get:
      description: Some description
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of references used to generate concentration values in ECMDB
      tags:
      - Metabolites
      - Concentration
  /metabolites/summary/get_distinct/:
    get:
      description: Get number of distinct values in field.
      parameters:
      - example: concentrations.reference.id
        in: query
        name: _input
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of distinct values in field.
      tags:
      - Metabolites
      - Meta
  /metabolites/summary/ymdb_conc_count/:
    get:
      description: Some description
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of concentrations observations in YMDB
      tags:
      - Metabolites
      - Concentration
  /metabolites/summary/ymdb_doc_count/:
    get:
      description: Some description
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of metabolites in YMDB collection.
      tags:
      - Metabolites
      - Concentration
  /metabolites/summary/ymdb_ref_count/:
    get:
      description: Some description
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of references used to generate concentration values in YMDB
      tags:
      - Metabolites
      - Concentration
  /proteins/meta/meta_combo/:
    get:
      description: |-
        Get meta information for proteins,
         uniprot_id overrides all other input options.
         Combination of protein_name + taxon_id yields
         all uniprot_id that has abundance information in
         that particular organism. species_name overrides
         ncbi_taxon_id. Users should try different combinations
         to get a feel of what each combination returns.
      parameters:
      - in: query
        name: uniprot_id
        required: false
        schema:
          items:
            type: string
          type: array
      - in: query
        name: ncbi_taxon_id
        required: false
        schema:
          type: integer
      - in: query
        name: species_name
        required: false
        schema:
          type: string
      - in: query
        name: name
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProteinMetaCombo'
          description: OK
      summary: Get meta information for proteins
      tags:
      - Proteins
  /proteins/meta/meta_single/:
    get:
      description: |-
        Get meta information for proteins,
         input only the taxon_id or name (either kegg orthology
         name or protein name).
      parameters:
      - in: query
        name: ncbi_taxon_id
        required: false
        schema:
          type: integer
      - in: query
        name: name
        required: false
        schema:
          type: string
      - in: query
        name: ko
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProteinMetaSingle'
          description: OK
      summary: Get meta information for proteins with one input
      tags:
      - Proteins
  /proteins/precise_abundance/:
    get:
      description: |-
        If abundance value for the protein is not found, one can search for proximity proteins
         using proximity_abundance
      parameters:
      - example:
        - Q54JE4
        in: query
        name: uniprot_id
        required: true
        schema:
          items:
            type: string
          type: array
      - example: homo sapiens
        in: query
        name: taget_species
        required: false
        schema:
          type: string
      - example: false
        in: query
        name: taxon_distance
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProteinAbundance'
          description: OK
      summary: Get abundance values for proteins
      tags:
      - Proteins
  /proteins/proximity_abundance/:
    get:
      description: Search for analog proteins by traversing the taxonomic tree
      parameters:
      - in: query
        name: uniprot_id
        required: true
        schema:
          type: string
      - in: query
        name: distance
        required: true
        schema:
          type: integer
      - in: query
        name: depth
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProximityProteinAbundance'
          description: OK
      summary: Get abundance values for proteins along the taxonomic tree
      tags:
      - Proteins
  /proteins/proximity_abundance/proximity_abundance_kegg/:
    get:
      description: Search for analog proteins by traversing the taxonomic tree
      parameters:
      - in: query
        name: kegg_id
        required: true
        schema:
          type: string
      - description: anchor organism
        in: query
        name: anchor
        required: false
        schema:
          default: homo sapiens
          type: string
      - in: query
        name: distance
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProximityProteinAbundance'
          description: OK
      summary: Get abundance values for proteins along the taxonomic tree
      tags:
      - Proteins
  /proteins/related/related_reactions_by_kegg/:
    get:
      description: Finds all reactions catalyzed by proteins belonging to one kegg
        group
      parameters:
      - example: K00426
        in: query
        name: ko
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  nullable: true
                  type: object
                type: array
          description: OK
      summary: Get related reactions based on kegg ortholog groups
      tags:
      - Proteins
  /proteins/related/related_reactions_by_uniprot/:
    get:
      description: Finds all reactions catalyzed by protein or the subunit of the
        enzyme contains protein
      parameters:
      - example: Q55804
        in: query
        name: uniprot_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  nullable: true
                  type: object
                type: array
          description: OK
      summary: Get related reactions based on protein's uniprot_id
      tags:
      - Proteins
  /proteins/similar_protein/refseq/:
    get:
      description: This section provides links to proteins that are similar to the
        protein sequence(s) described in this entry at different levels of sequence
        identity thresholds (100%, 90% and 50%) based on their membership in UniProt
        Reference Clusters.
      parameters:
      - in: query
        name: uniprot_id
        required: true
        schema:
          type: string
      - in: query
        name: identity
        required: false
        schema:
          default: 90
          enum:
          - 100
          - 90
          - 50
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  nullable: true
                  type: string
                type: array
          description: OK
      summary: Get similar proteins based on refseq
      tags:
      - Proteins
  /proteins/summary/num_abundances/:
    get:
      description: For about page
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of proteins with abundance values
      tags:
      - Proteins
  /proteins/summary/num_obs_abundances/:
    get:
      description: For about page
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of observed abundance values
      tags:
      - Proteins
  /proteins/summary/num_obs_modifications/:
    get:
      description: For about page
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of observed protein modifications
      tags:
      - Proteins
  /proteins/summary/num_organism/:
    get:
      description: For about page
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of unique organisms in protein collection.
      tags:
      - Proteins
      - Organism
  /proteins/summary/num_protein/:
    get:
      description: For about page
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of unique proteins.
      tags:
      - Proteins
      - Count
  /proteins/summary/num_publications/:
    get:
      description: For about page
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of publications used to get protein abundances.
      tags:
      - Proteins
  /reactions/kinlaw_by_name/:
    get:
      description: Search for reactions given reactants
      parameters:
      - description: list of substrates' names
        explode: false
        in: query
        name: substrates
        required: true
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: list of products' names
        explode: false
        in: query
        name: products
        required: true
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: page from (0 indexed)
        in: query
        name: _from
        required: true
        schema:
          default: 0
          type: integer
      - description: page size
        in: query
        name: size
        required: true
        schema:
          default: 10
          type: integer
      - description: whether to limit substrates/products to include only input values
        in: query
        name: bound
        required: true
        schema:
          default: loose
          enum:
          - loose
          - tight
          type: string
      - example: true
        in: query
        name: taxon_distance
        schema:
          type: boolean
      - example: homo sapiens
        in: query
        name: species
        schema:
          type: string
      - example: '{''kegg_meta.gene_ortholog'': 0, ''kegg_meta._id'': 0, ''_id'':
          0}'
        in: query
        name: projection
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/RxnCompartment'
                - $ref: '#/components/schemas/RxnEnzyme'
                - $ref: '#/components/schemas/RxnResource'
                - $ref: '#/components/schemas/RxnComprehensive'
          description: OK
      summary: Get reactions based on substrates' and products' names
      tags:
      - Reactions
  /reactions/kinlaw_by_rxn/:
    get:
      description: Search for reactions given reactants
      parameters:
      - description: list of substrates' inchikey
        in: query
        name: substrates
        required: true
        schema:
          items:
            type: string
          type: array
      - description: list of products' inchikey
        in: query
        name: products
        required: true
        schema:
          items:
            type: string
          type: array
      - description: page from (0 indexed)
        in: query
        name: _from
        required: true
        schema:
          default: 0
          type: integer
      - description: page size
        in: query
        name: size
        required: true
        schema:
          default: 10
          type: integer
      - description: whether to limit substrates/products to include only input values
        in: query
        name: bound
        required: true
        schema:
          default: loose
          enum:
          - loose
          - tight
          type: string
      - description: degree of freedom allowed (number of parts of inchikey to truncate);
          the default is 0
        in: query
        name: dof
        required: false
        schema:
          default: 0
          enum:
          - 0
          - 1
          - 2
          type: integer
      - example: homo sapiens
        in: query
        name: species
        required: false
        schema:
          type: string
      - example: false
        in: query
        name: taxon_distance
        required: false
        schema:
          type: boolean
      - example: '{''kegg_meta.gene_ortholog'': 0, ''kegg_meta._id'': 0, ''_id'':
          0}'
        in: query
        name: projection
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/RxnCompartment'
                - $ref: '#/components/schemas/RxnEnzyme'
                - $ref: '#/components/schemas/RxnResource'
                - $ref: '#/components/schemas/RxnComprehensive'
                - $ref: '#/components/schemas/RxnError'
          description: OK
      summary: Get reactions based on substrates' and products' inchikey
      tags:
      - Reactions
  /reactions/kinlaw_doc/:
    get:
      description: Search for reactions given kinetic law ids
      parameters:
      - description: list of kinetic law ids
        in: query
        name: kinlaw_id
        required: true
        schema:
          items:
            type: integer
          type: array
      - description: page from (0 indexed)
        in: query
        name: _from
        required: true
        schema:
          default: 0
          type: integer
      - description: page size
        in: query
        name: size
        required: true
        schema:
          default: 10
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/RxnComprehensive'
                - $ref: '#/components/schemas/RxnError'
          description: OK
      summary: Get reactions based on kinetic law ids
      tags:
      - Reactions
  /reactions/kinlaw_doc/with_prm/:
    get:
      description: Return reactions with at least one km or kcat
      parameters:
      - description: list of kinetic law ids
        in: query
        name: kinlaw_id
        required: true
        schema:
          items:
            type: integer
          type: array
      - description: page from (0 indexed)
        in: query
        name: _from
        required: true
        schema:
          default: 0
          type: integer
      - description: page size
        in: query
        name: size
        required: true
        schema:
          default: 10
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/RxnComprehensive'
                - $ref: '#/components/schemas/RxnError'
          description: OK
      summary: Get reactions based on kinetic law ids
      tags:
      - Reactions
  /reactions/kinlaw_entry/:
    get:
      description: Search for reactions given sabiork reaction entry id
      parameters:
      - description: sabiork reaction entry id
        in: query
        name: entry_id
        required: true
        schema:
          type: string
      - description: the target organism in which the reaction occurs
        in: query
        name: target_organism
        required: false
        schema:
          type: string
      - description: the last kinlaw_id from previous page
        in: query
        name: last_id
        required: true
        schema:
          default: 0
          type: integer
      - description: page size
        in: query
        name: size
        required: true
        schema:
          default: 10
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/RxnCompartment'
                - $ref: '#/components/schemas/RxnEnzyme'
                - $ref: '#/components/schemas/RxnResource'
                - $ref: '#/components/schemas/RxnComprehensive'
          description: OK
      summary: Get reactions based on reaction entry id
      tags:
      - Reactions
  /reactions/summary/get_brenda_obs/:
    get:
      description: For about page
      parameters:
      - in: query
        name: parameter
        required: true
        schema:
          enum:
          - k_ms
          - k_cats
          - k_is
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of observations from BRENDA based on parameter name.
      tags:
      - Kinetics
      - Reactions
  /reactions/summary/get_distinct/:
    get:
      description: Get number of distinct values in field.
      parameters:
      - example: pH
        in: query
        name: _input
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                  - type: string
                  - type: integer
                type: array
          description: OK
      summary: Get number of distinct values in field.
      tags:
      - Reactions
      - Kinetics
  /reactions/summary/get_frequency/:
    get:
      description: For about page
      parameters:
      - in: query
        name: field
        required: true
        schema:
          enum:
          - temperature
          - ph
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
          description: OK
      summary: Get pH distribution.
      tags:
      - Kinetics
      - Reactions
  /reactions/summary/num_entries/:
    get:
      description: For about page
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of unique reaction entries.
      tags:
      - Kinetics
      - Reactions
      - Count
  /reactions/summary/num_organism/:
    get:
      description: For about page
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of unique organisms in reaction collection.
      tags:
      - Kinetics
      - Reactions
      - Organism
  /reactions/summary/num_parameter_kcat/:
    get:
      description: For about page
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of reaction entries with k_cat.
      tags:
      - Kinetics
      - Reactions
  /reactions/summary/num_parameter_km/:
    get:
      description: For about page
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of reaction entries with Km.
      tags:
      - Kinetics
      - Reactions
      - Organism
  /reactions/summary/num_refs/:
    get:
      description: For about page
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get total number of primary sources.
      tags:
      - Kinetics
      - Reactions
      - Meta
  /rna/halflife/get_info_by_ko/:
    get:
      description: Get RNA half-life information based on protein kegg ortholog group.
      parameters:
      - example: K13280
        in: query
        name: ko_number
        required: true
        schema:
          type: string
      - example: 0
        in: query
        name: _from
        required: true
        schema:
          type: integer
      - example: 10
        in: query
        name: size
        required: true
        schema:
          type: integer
      - example: true
        in: query
        name: taxon_distance
        schema:
          type: boolean
      - example: homo sapiens
        in: query
        name: species
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaHalflifeDoc'
          description: OK
      summary: Get RNA half-life information based on protein kegg ortholog group.
      tags:
      - RNA
      - RNA Half-life
  /rna/halflife/get_info_by_name/:
    get:
      description: Get RNA half-life information based on protein name.
      parameters:
      - example: Protein translocase subunit SecD
        in: query
        name: protein_name
        required: true
        schema:
          type: string
      - example: 0
        in: query
        name: _from
        required: true
        schema:
          type: integer
      - example: 10
        in: query
        name: size
        required: true
        schema:
          type: integer
      - example: true
        in: query
        name: taxon_distance
        schema:
          type: boolean
      - example: homo sapiens
        in: query
        name: species
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaHalflifeDoc'
          description: OK
      summary: Get RNA half-life information based on protein name.
      tags:
      - RNA
      - RNA Half-life
  /rna/modification/get_modifications_by_ko/:
    get:
      description: Get RNA modification information based on protein kegg ortholog
        group.
      parameters:
      - example: K14218
        in: query
        name: ko_number
        required: true
        schema:
          type: string
      - example: 0
        in: query
        name: _from
        required: true
        schema:
          type: integer
      - example: 10
        in: query
        name: size
        required: true
        schema:
          type: integer
      - example: Escherichia coli
        in: query
        name: target_organism
        required: false
        schema:
          type: string
      - example: false
        in: query
        name: taxon_distance
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Get RNA modifications.
      tags:
      - RNA
      - RNA Modification
  /rna/summary/get_distinct/:
    get:
      description: Get number of distinct values in field.
      parameters:
      - example: halflives.reference.doi
        in: query
        name: _input
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of distinct values in field.
      tags:
      - RNA
      - RNA Half-life
      - Meta
  /rna/summary/get_publication_num/:
    get:
      description: Get number of primary sources used to parse mRNA half-life information.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of primary sources used to parse mRNA half-life information.
      tags:
      - RNA
      - RNA Half-life
      - Meta
  /rna/summary/get_total_docs/:
    get:
      description: Get number of proteins and non-coding DNAs that have half-life
        values
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of proteins and non-coding DNAs that have half-life values
      tags:
      - RNA
      - RNA Half-life
      - Meta
  /rna/summary/get_total_halflife_obs/:
    get:
      description: Get number of half-life observations.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get number of half-life observations.
      tags:
      - RNA
      - RNA Half-life
      - Meta
  /rna/summary/get_total_modifications/:
    get:
      description: Get total number of RNA modifications in database.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: OK
      summary: Get total number of RNA modifications in database.
      tags:
      - RNA
      - RNA Half-life
      - Meta
  /status/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                required:
                - message
                type: object
          description: OK.
        '404':
          description: Api server not found.
        5XX:
          description: Unexpected error.
      summary: Pings the server to verfy connection
      tags:
      - Info
      - Datanator
  /taxon/canon_rank_common_distance/:
    get:
      description: see summary
      parameters:
      - description: NCBI Taxonomy ID of the first organism
        example: 562
        in: query
        name: org_0
        required: true
        schema:
          type: integer
      - description: NCBI Taxonomy ID of the second organism
        example: 550685
        in: query
        name: org_1
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
      summary: calculate the distance between the each of the two organisms and their
        canonically-ranked common ancestor.
      tags:
      - NCBI Taxonomy
  /taxon/canon_rank_distance/:
    get:
      description: see summary
      parameters:
      - in: query
        name: ncbi_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxnCanonRankDistance'
          description: OK
      summary: |-
        Given the ncbi_id, return canonically-ranked ancestors
         along the lineage and their non-canonical distances.
      tags:
      - NCBI Taxonomy
  /taxon/canon_rank_distance_by_name/:
    get:
      description: see summary
      parameters:
      - in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxnCanonRankDistance'
          description: OK
      summary: |-
        Given the species name, return canonically-ranked ancestors
         along the lineage and their non-canonical distances.
      tags:
      - NCBI Taxonomy
  /taxon/is_child/:
    get:
      description: see summary
      parameters:
      - description: source organism's NCBI Taxonomy IDs.
        in: query
        name: src_tax_ids
        required: true
        schema:
          items:
            type: integer
          type: array
      - description: target organism's NCBI Taxonomy ID.
        in: query
        name: target_tax_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: boolean
                type: array
          description: OK
      summary: Check if each source is the child of target.
      tags:
      - NCBI Taxonomy
components:
  parameters:
    limitParam:
      description: max records to return
      in: query
      name: limit
      required: true
      schema:
        format: int32
        type: integer
    skipParam:
      description: number of items to skip
      in: query
      name: skip
      required: true
      schema:
        format: int32
        type: integer
  responses:
    GeneralError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
      description: General Error
    IllegalInput:
      description: Illegal input for operation.
    NotFound:
      description: Entity not found.
  schemas:
    Category:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    FTX:
      properties:
        _shards:
          $ref: '#/components/schemas/FtxShards'
        hits:
          $ref: '#/components/schemas/FtxHitsObj'
        timed_out:
          type: boolean
        took:
          type: integer
      required:
      - took
      - timed_out
      - _shards
      - hits
      type: object
    FtxHitsArray:
      items:
        properties:
          _id:
            type: string
          _index:
            type: string
          _score:
            type: number
          _source:
            type: object
          _type:
            type: string
        required:
        - _id
        - _index
        - _score
        - _source
        - _type
        type: object
      type: array
    FtxHitsInPage:
      properties:
        ecmdb:
          items:
            properties:
              _score:
                type: number
            required:
            - _score
            type: object
          type: array
        metabolites_meta:
          items:
            properties:
              _score:
                type: number
            required:
            - _score
            type: object
          type: array
        protein:
          items:
            properties:
              _score:
                type: number
            required:
            - _score
            type: object
          type: array
        sabio_rk:
          items:
            properties:
              _score:
                type: number
            required:
            - _score
            type: object
          type: array
        ymdb:
          items:
            properties:
              _score:
                type: number
            required:
            - _score
            type: object
          type: array
      type: object
    FtxHitsObj:
      properties:
        hits:
          $ref: '#/components/schemas/FtxHitsArray'
        max_score:
          type: number
        total:
          properties:
            relation:
              type: string
            value:
              type: integer
          required:
          - value
          - relation
          type: object
      required:
      - total
      - max_score
      - hits
      type: object
    FtxProteinByKo:
      properties:
        top_kos:
          properties:
            buckets:
              items:
                properties:
                  top_ko:
                    $ref: '#/components/schemas/FtxHitsObj'
                type: object
              type: array
          type: object
      required:
      - top_kos
      type: object
    FtxShards:
      properties:
        failed:
          type: integer
        skipped:
          type: integer
        successful:
          type: integer
        total:
          type: integer
      required:
      - total
      - successful
      - skipped
      - failed
      type: object
    FtxTransHits:
      items:
        properties:
          _score:
            type: number
        required:
        - _score
        type: object
      type: array
    GeneralError:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      type: object
    KeggMetaDoc:
      items:
        properties:
          definition:
            properties:
              ec_code:
                items:
                  type: string
                type: array
              name:
                items:
                  type: string
                type: array
            type: object
          gene_name:
            items:
              type: string
            type: array
          kegg_disease:
            items:
              properties:
                kegg_disease_code:
                  type: string
                kegg_disease_name:
                  type: string
              type: object
            nullable: true
            type: array
          kegg_module:
            items:
              properties:
                kegg_module_code:
                  type: string
                kegg_module_name:
                  type: string
              type: object
            nullable: true
            type: array
          kegg_orthology_id:
            type: string
          kegg_pathway:
            items:
              properties:
                kegg_pathway_code:
                  type: string
                pathway_description:
                  type: string
              type: object
            nullable: true
            type: array
        required:
        - kegg_orthology_id
        - gene_name
        - definition
        - kegg_pathway
        - kegg_disease
        - kegg_module
        type: object
      type: array
    Metabolite:
      properties:
        concentrations:
          items:
            properties:
              concentration:
                oneOf:
                - type: number
                - type: string
              unit:
                type: string
            type: object
          type: array
        inchikey:
          type: string
        metabolite:
          type: string
      required:
      - inchikey
      - metabolite
      - concentrations
      type: object
    MetaboliteConcentration:
      items:
        properties:
          creation_date:
            type: string
          inchi:
            type: string
          inchikey:
            type: string
          name:
            type: string
          version:
            type: string
        required:
        - version
        - creation_date
        - name
        - inchi
        - inchikey
        type: object
      type: array
    MetaboliteMeta:
      properties:
        InChI_Key:
          type: string
        chebi_id:
          type: string
        hmdb_id:
          type: string
        inchi:
          type: string
        kegg_id:
          type: string
        kinlaw_id:
          items:
            type: integer
          nullable: true
          type: array
        m2m_id:
          nullable: true
          type: string
        name:
          type: string
        synonyms:
          items:
            type: string
          nullable: true
          type: array
        ymdb_id:
          nullable: true
          type: string
      type: object
    Observation:
      properties:
        error:
          description: A numerical value corresponding to the error in the measurment,
            in the same units as the measurment
          example: '1'
          type: number
        experimental_conditions:
          items:
            type: string
          type: array
        measurment:
          description: A numerical value corresponding to the observed value of the
            measurment
          example: 3.8
          type: number
        measurment_type:
          description: The type of measurment being made
          enum:
          - concentration
          - abundance
          - mass
          type: string
        source:
          example: doi:10.1038/nphys1170
          type: string
        species:
          example: Homo sapiens
          type: string
        units:
          description: The units that the measurment was made in
          example: uMolar
          type: string
      required:
      - measurment_type
      - measurment
      - units
      - species
      - source
      type: object
    Projection:
      properties:
        _id:
          type: integer
        kinlaw_id:
          type: integer
      required:
      - _id
      type: object
    ProteinAbundance:
      items:
        properties:
          abundances:
            items:
              properties:
                abundance:
                  type: string
                organ:
                  type: string
              type: object
            type: array
          uniprot_id:
            type: string
        required:
        - uniprot_id
        - abundances
        type: object
      type: array
    ProteinMetaCombo:
      items:
        properties:
          abundances:
            items:
              properties:
                abundance:
                  type: string
                organ:
                  type: string
              type: object
            type: array
          canonical_sequence:
            type: string
          entry_name:
            type: string
          length:
            type: integer
          mass:
            type: string
          ncbi_taxonomy_id:
            type: integer
          protein_name:
            type: string
          species_name:
            type: string
          uniprot_id:
            type: string
        required:
        - uniprot_id
        - entry_name
        - protein_name
        - canonical_sequence
        - length
        - mass
        - abundances
        - ncbi_taxonomy_id
        type: object
      type: array
    ProteinMetaSingle:
      items:
        properties:
          ko_name:
            items:
              type: string
            type: array
          ko_number:
            type: string
          uniprot_ids:
            items:
              type: object
            type: object
        required:
        - uniprot_ids
        - ko_name
        - ko_number
        type: object
      type: array
    ProximityProteinAbundance:
      items:
        properties:
          distance:
            description: -1 indicates no protein with such uniprot_id; -2 indicates
              protein has no ko info.
            type: integer
          documents:
            items:
              properties:
                abundances:
                  items:
                    properties:
                      abundance:
                        type: string
                      organ:
                        type: string
                    type: object
                  type: array
                depth:
                  type: integer
                gene_name:
                  type: string
                ko_name:
                  items:
                    type: string
                  type: array
                ko_number:
                  type: string
                ncbi_taxonomy_id:
                  type: integer
                protein_name:
                  type: string
                species_name:
                  type: string
                uniprot_id:
                  type: string
              type: object
            type: array
        required:
        - distance
        - documents
        type: object
      type: array
    Reaction:
      properties:
        id:
          type: string
      required:
      - id
      type: object
    RnaHalflifeDoc:
      items:
        properties:
          halflives:
            items:
              properties:
                halflife:
                  type: number
                ncbi_taxonomy_id:
                  type: integer
                reference:
                  items:
                    properties:
                      doi:
                        type: string
                    type: object
                  type: array
                species:
                  type: string
                unit:
                  type: string
              required:
              - reference
              - species
              - ncbi_taxonomy_id
              type: object
            type: array
          ko_number:
            type: string
          protein_names:
            items:
              type: string
            type: array
          uniprot_id:
            nullable: true
            type: string
        type: object
      type: array
    RnaHalflives:
      properties:
        halflife:
          type: number
        ncbi_taxonomy_id:
          type: integer
        reference:
          items:
            properties:
              doi:
                type: string
            type: object
          type: array
        species:
          type: string
        unit:
          type: string
      required:
      - reference
      - species
      - ncbi_taxonomy_id
      type: object
    RxnCompartment:
      properties:
        enzyme:
          items:
            properties:
              compartment_id:
                type: number
              compartment_name:
                type: string
              created:
                type: string
              modified:
                type: string
            type: object
          type: array
      type: object
    RxnComprehensive:
      items:
        properties:
          enzymes:
            items:
              type: object
            type: array
          equation:
            nullable: true
            type: string
          kinlaw_id:
            type: integer
          mechanism:
            nullable: true
            type: string
          media:
            nullable: true
            type: string
          modified:
            nullable: true
            type: string
          parameter:
            items:
              type: object
            type: array
          ph:
            nullable: true
            type: number
          resource:
            items:
              type: object
            type: array
          taxon_id:
            nullable: true
            type: integer
          taxon_variant:
            nullable: true
            type: string
          taxon_wildtype:
            nullable: true
            type: integer
          temperature:
            nullable: true
            type: number
          tissue:
            nullable: true
            type: string
        type: object
      type: array
    RxnEntryId:
      properties:
        kinlaw_id:
          items:
            type: integer
          type: array
        products:
          items:
            items:
              type: string
            type: array
          type: array
        substrates:
          items:
            items:
              type: string
            type: array
          type: array
      required:
      - kinlaw_id
      - substrates
      - products
      type: object
    RxnEnzyme:
      properties:
        enzyme:
          items:
            properties:
              enzyme_id:
                type: number
              enzyme_name:
                type: string
              enzyme_type:
                type: string
              molecular_weight:
                type: number
            type: object
          type: array
      type: object
    RxnError:
      type: string
    RxnResource:
      items:
        properties:
          id:
            type: string
          namespace:
            type: string
        type: object
      type: array
    SimilarMetaboliteConcentration:
      items:
        nullable: true
        properties:
          concentrations:
            items:
              type: object
            type: array
          inchikey:
            type: string
          similarity_score:
            type: number
        required:
        - inchikey
        - concentrations
        - similarity_score
        type: object
      type: array
    Tag:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    TxnCanonRankDistance:
      items:
        properties:
          rank:
            type: string
        type: object
      type: array
  securitySchemes:
    api_key:
      in: header
      name: api_key
      type: apiKey
    petstore_auth:
      flows:
        implicit:
          authorizationUrl: https://example.org/api/oauth/dialog
          scopes:
            read:pets: read your pets
            write:pets: modify pets in your account
      type: oauth2
