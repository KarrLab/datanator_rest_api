precise_abundance:
  get:
    parameters:
      - in: query
        name: uniprot_id
        schema:
          type: array
          items:
            type: string
        required: false
      - in: query
        name: kegg_orthology
        schema:
          type: string
        required: false
    tags:
      - Proteins
    summary: Get abundance values for proteins
    description: "If abundance value for the protein is not found, one can search for proximity proteins\n
    using proximity_abundance"
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProteinAbundance"

proximity_abundance:
  get:
    parameters:
      - in: query
        name: uniprot_id
        schema:
          type: string
        required: true
      - in: query
        name: distance
        schema:
          type: integer
        required: true
      - in: query
        name: depth
        schema:
          type: integer
        required: true
    tags:
      - Proteins
    summary: Get abundance values for proteins along the taxonomic tree
    description: Search for analog proteins by traversing the taxonomic tree
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProximityProteinAbundance"

proximity_abundance_kegg:
  get:
    parameters:
      - in: query
        name: kegg_id
        schema:
          type: string
        required: true
      - in: query
        name: anchor
        schema:
          type: string
          default: homo sapiens
        required: false
        description: anchor organism
      - in: query
        name: distance
        schema:
          type: integer
        required: true
      - in: query
        name: depth
        schema:
          type: integer
        required: true
    tags:
      - Proteins
    summary: Get abundance values for proteins along the taxonomic tree
    description: Search for analog proteins by traversing the taxonomic tree
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProximityProteinAbundance"

meta:
  meta_single:
    get:
      parameters:
        - in: query
          name: ncbi_taxon_id
          schema:
            type: integer
          required: false
        - in: query
          name: name
          schema:
            type: string
          required: false
        - in: query
          name: ko
          schema:
            type: string
          required: false
      tags:
        - Proteins
      summary: Get meta information for proteins with one input
      description: "Get meta information for proteins,\n
      input only the taxon_id or name (either kegg orthology\n
      name or protein name)."  
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProteinMetaSingle"

  meta_combo:
    get:
      parameters:
        - in: query
          name: uniprot_id
          schema:
            type: array
            items:
              type: string
          required: false
        - in: query
          name: ncbi_taxon_id
          schema:
            type: integer
          required: false
        - in: query
          name: species_name
          schema:
            type: string
          required: false
        - in: query
          name: name
          schema:
            type: string
          required: false
      tags:
        - Proteins
      summary: Get meta information for proteins
      description: "Get meta information for proteins,\n
      uniprot_id overrides all other input options.\n
      Combination of protein_name + taxon_id yields\n
      all uniprot_id that has abundance information in\n
      that particular organism. species_name overrides\n
      ncbi_taxon_id. Users should try different combinations\n
      to get a feel of what each combination returns."  
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProteinMetaCombo"

summary:
  num_protein:
    get:
      tags:
        - Protein
        - Count
      summary: Get number of unique proteins.
      description: For about page
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer

  num_organism:
    get:
      tags:
        - Protein
        - Organism
      summary: Get number of unique organisms in protein collection.
      description: For about page
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer